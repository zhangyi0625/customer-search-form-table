const SHEBANG_REGEX = /#!.*[\s\n\r]*$/;
const REACT_DIRECTIVE_REGEX = /^['"]use (client|server)['"](;?)[\s\n\r]*$/;
const DTS_EXTENSIONS = [
    'd.ts',
    'd.mts',
    'd.cts'
];
const JS_EXTENSIONS = [
    'js',
    'mjs',
    'jsx',
    '(?<!\\.d\\.)ts',
    '(?<!\\.d\\.)mts',
    '(?<!\\.d\\.)cts',
    'tsx',
    'cjs',
    'cjsx',
    'mjsx',
    'mtsx',
    'ctsx'
];
const CSS_EXTENSIONS = [
    'css',
    'sass',
    'scss',
    'less',
    'styl',
    'stylus'
];
new RegExp(`\\.(${JS_EXTENSIONS.join('|')})$`);
new RegExp(`\\.(${CSS_EXTENSIONS.join('|')})$`);
new RegExp(`\\.(${DTS_EXTENSIONS.join('|')})$`);
function splitFromFirstLine(text) {
    const match = text.match(/(\r\n|\n)/);
    if (!match) return [
        text,
        ''
    ];
    return [
        text.slice(0, match.index),
        text.slice(match.index)
    ];
}
const entryModuleLoader_loader = function(source) {
    let result = source;
    const [firstLine1, rest] = splitFromFirstLine(result);
    if (SHEBANG_REGEX.test(firstLine1)) result = rest;
    const [firstLine2, rest2] = splitFromFirstLine(result);
    if (REACT_DIRECTIVE_REGEX.test(firstLine2)) result = rest2;
    return result;
};
const entryModuleLoader = entryModuleLoader_loader;
export { entryModuleLoader as default };
